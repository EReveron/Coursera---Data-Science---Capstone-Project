setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Main Predict Word vFinal.R")
source("Knersey-ney vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
source("Knersey-ney vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Main Predict Word vFinal.R")
source("Knersey-ney vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Main Predict Word vFinal.R")
source("Knersey-ney vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Main Predict Word vFinal.R")
source("Knersey-ney vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
rm(DT.bi.prob)
rm(DT.quad)
rm(DT.tri)
rm(DT.uni.prob.final)
calculate_prob_kn(2,150,1)
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Main Predict Word vFinal.R")
source("Knersey-ney vFinal.R")
load_DT_prob_tables(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
load_DT_prob_tables(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
calculate_prob_kn(,150,1)
calculate_prob_kn(2,150,1)
calculate_prob_kn(2,150,1)
calculate_prob_kn(1,150,1)
rm(DT.uni.prob.final)
calculate_prob_kn(1,150,1)
calculate_prob_kn(1,150,1)
calculate_prob_kn(1,150,1)
q
quit
end
calculate_prob_kn(1,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
q
q
quit
end
()
load_DT_prob_table <- function (n,lines=-1,p1=5) {
# Values needed for Knersey-ney prob calculations
p1 <<- p1
p2 <<- p1 + 1
switch(n,
"1" = {
var.name <- "DT.uni.prob"
file.name.temp <- create_filename("DT_uni_prob_temp",lines)
},
"2" = {
var.name <- "DT.bi.prob"
file.name.temp <- create_filename("DT_bi_prob_temp",lines)
},
"3" = {
var.name <- "DT.tri.prob"
file.name.temp <- create_filename("DT_tri_prob_temp",lines)
},
"4" = {
var.name <- "DT.quad.prob"
file.name.temp <- create_filename("DT_quad_prob_temp",lines)
}
)
#Validate if the DT prob temp exists in the enviroment
if (!exists(var.name)) {
#Validate if the file exists an load the value
if (file.exists(file.name.temp)) {
print(paste("Loading DT Prob temp file: ",file.name.temp, sep =""))
load(file.name.temp,.GlobalEnv)
} else {
load_DT_table(n,lines)
print(paste("-----> load_DT_prob_table(","n:=",n," p1:=",p1," lines:=",lines,").......",sep=""))
t1 <- proc.time()
switch(n,
"1" = {
DT.uni.prob <<- as.data.table(DT.uni, key = "t1")
DT.uni.prob <<- DT.uni.prob[ freq >= p1,
c("n11","n12","l1","l2","a1","a2","pkn1","pkn2") :=
list(-1,-1,-1,-1,-1,-1,-1,-1),
]
rm(DT.uni,envir =.GlobalEnv)
},
"2" = {
DT.bi.prob <<- as.data.table(DT.bi, key = "t1,t2")
DT.bi.prob <<- DT.bi.prob[ freq >= p1,
c("n11","n12","l1","l2","a1","a2","pkn1","pkn2") :=
list(-1,-1,-1,-1,-1,-1,-1,-1),
]
rm(DT.bi,envir =.GlobalEnv)
},
"3" = {
DT.tri.prob <<- as.data.table(DT.tri, key = "t1,t2,t3")
DT.tri.prob <<- DT.tri.prob[ freq >= p1,
c("n11","n12","l1","l2","a1","a2","pkn1","pkn2") :=
list(-1,-1,-1,-1,-1,-1,-1,-1),
]
rm(DT.tri,envir =.GlobalEnv)
},
"4" = {
DT.quad.prob <<- as.data.table(DT.quad, key = "t1,t2,t3,t4")
DT.quad.prob <<- DT.quad.prob[ freq >= p1,
c("n11","n12","l1","l2","a1","a2","pkn1","pkn2") :=
list(-1,-1,-1,-1,-1,-1,-1,-1),
]
rm(DT.quad,envir =.GlobalEnv)
}
)
t2 <- proc.time()
print(paste("-----> load_DT_prob_table: Running Time .......",
elapsed_time(t1,t2)," seconds ...",sep=""))
}
}
switch(n, # Calculate important values for Knersey-ney, including discount values
# (D2, D3, D4) for lambda function
"1" = n.uni <<- nrow(DT.uni.prob),
"2" = {
#   n1: number of bigrams that occurs exactly p1 times
#   n2: number of bigrams that occurs exactly p1+1 times
#   D2 = n1 / (n1 + 2 * n2)
n.bi <<- nrow(DT.bi.prob)
n1.bi <<- nrow(DT.bi.prob[freq == p1,,])
n2.bi <<- nrow(DT.bi.prob[freq == p2,,])
D2 <<- n1.bi / (n1.bi + 2 * n2.bi)
},
"3" = {
#   n1: number of trigrams that occurs exactly p1 times
#   n2: number of trigrams that occurs exactly p1+1 times
#   D3 = n1 / (n1 + 2 * n2)
n.tri <<- nrow(DT.tri.prob)
n1.tri <<- nrow(DT.tri.prob[freq == p1,,])
n2.tri <<- nrow(DT.tri.prob[freq == p2,,])
D3 <<- n1.tri / (n1.tri + 2 * n2.tri)
},
"4" = {
#   n1: number of quadgrams that occurs exactly p1 times
#   n2: number of quadgrams that occurs exactly p1+1 times
#   D4 = n1 / (n1 + 2 * n2)
n.quad <<- nrow(DT.quad.prob)
n1.quad <<- nrow(DT.quad.prob[freq == p1,,])
n2.quad <<- nrow(DT.quad.prob[freq == p2,,])
D4 <<- n1.quad / (n1.quad + 2 * n2.quad)
}
)
}
calculate_prob_kn(1,150,1)
calculate_prob_kn(2,150,1)
View(DT.bi.prob)
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
calculate_prob_kn(1,150,1)
rm(DT.uni.prob)
rm(DT.uni.prob.final)
calculate_prob_kn(1,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
calculate_prob_kn(2,150,1)
DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
calculate_prob_kn(2,150,1)
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
View(DT.bi.prob)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
DT.bi.prob
calculate_prob_kn(2,150,1)
DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
DT.bi.prob[t1 == x[1] & t2 == x[2],a2,]
count_kn(x,high_order)
D2
count_kn(x[1],high_order)
count_kn(x,high_order) - D2
max( count_kn(x,high_order) - D2, 0)
calculate_prob_kn(2,150,1)
load_DT_prob_tables(1,150,1)
load_DT_prob_tables(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
load_DT_prob_tables(2,150,1)
load_DT_prob_tables(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
load_DT_prob_tables(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
create_DT(1,150,0)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
create_DT(1,150,0)
if (1 <= 0)
{ print("TRUE")}
if (-51 <= 0)
{ print("TRUE")}
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
create_DT(1,150,0)
create_DT(2,150,0)
create_DT(3,150,0)
create_DT(,150,0)
create_DT(4,150,0)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
calculate_prob_kn(2,150,1)
calculate_prob_kn(2,150,1)
DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
count_kn(x,high_order)
count_kn(x[1],high_order
)
max( count_kn(x,high_order) - D2, 0) / count_kn(x[1],high_ordermax( count_kn(x,high_order) - D2, 0) / count_kn(x[1],high_order)
)
max( count_kn(x,high_order) - D2, 0) / count_kn(x[1],high_order
)
DT.bi.prob
alpha(x,high_order)
x
lambda(x[1],high_order)
r
r <- DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
max( count_kn(x,high_order) - D2, 0)
calculate_prob_kn(2,150,1)
DT.bi.prob[t1 == x[1] & t2 == x[2],a1:=r,]
r <- max( count_kn(x,high_order) - D2, 0) / count_kn(x[1],high_order)
DT.bi.prob[t1 == x[1] & t2 == x[2],a1:=r,]
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
alpha(x,high_order)
x
high_order
calculate_prob_kn(2,150,1)
l <- length(x)
l
l
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
l
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
Q
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
x
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
x <- "this"
x <- length(x)
x <- "this"
l <- length(x)
switch(l,
1L = print("1"),
switch(l,
"1L" = print("1")
)
is.integer(p1)
is.numeric(p1)
print(p1)
print(length(x))
??switch
x <- c("this","is")
length(x)
l <- length(x)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(1,150,1)
calculate_prob_kn(2,150,1)
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
alpha(x, high_order)
l <- length(x)
DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
DT.bi.prob[t1 == x[1] & t2 == x[2],a2,]
if (high_order) {
r <- DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
} else {
r <- DT.bi.prob[t1 == x[1] & t2 == x[2],a2,]
}
high_order
DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
r <- DT.bi.prob[t1 == x[1] & t2 == x[2],a1,]
count_kn(x,high_order)
D2
max( count_kn(x,high_order) - D2, 0)
count_kn(x[1],high_order)
r <- max( count_kn(x,high_order) - D2, 0) / count_kn(x[1],high_order)
calculate_prob_kn(2,150,1)
DT.bi.prob[t1=="m" & t2 ="not"]
DT.bi.prob[t1="m" & t2 ="not"]
DT.bi.prob[t1="m" & t2 ="not",,]
DT.bi.prob[t1=="m" & t2 =="not",,]
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
w <- 5
switch(w,
5 = print("5"),
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(2,150,1)
setwd("D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project")
source("Pred Next Word vFinal.R")
source("Pred Next Word Regex vFinal.R")
source("Knersey-ney vFinal.R")
source("Main Predict Word vFinal.R")
source("Create Ngrams Data Table vFinal.R")
setwd("D:/Coursera/Capstone Project/Coursera-SwiftKey/final/en_US")
calculate_prob_kn(3,150,1)
calculate_prob_kn(4,150,1)
main_predict_word("this is",0,10,TRUE,150)
runApp('D:/Coursera/Capstone Project/Coursera---Data-Science---Capstone-Project/Predict_Next_Word')
